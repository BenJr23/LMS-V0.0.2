// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Subject {
  id          String             @id @default(cuid())
  name        String
  code        String             @unique
  createdById String             // Clerk userId
  createdAt   DateTime           @default(now())

  instances   SubjectInstance[]  // One-to-many relationship
  updatedAt   DateTime @updatedAt
}

model SubjectInstance {
  id           String   @id @default(cuid())
  teacherName  String
  grade        String
  section      String
  enrollment   Int      // 0 = Inactive, 1 = Active
  enrolmentCode  Int      // NEW FIELD
  icon         String   // Image path
  subjectId    String
  createdById  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  subject      Subject  @relation(fields: [subjectId], references: [id])
  instances   Requirement[]  // One-to-many relationship
  enrolments  Enrolment[]    // One-to-many relationship with Enrolment
}

model Requirement {
  id               String   @id @default(cuid())
  requirementNumber Int
  title            String?     // Optional
  content          String?     // Optional (e.g., for Forum instructions)
  scoreBase        Int
  deadline         DateTime
  type             String      // e.g., "Forum", "Assignment", "Activity", "Quiz"
  subjectInstanceId String
  createdById      String      // Clerk userId
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  subjectInstance  SubjectInstance @relation(fields: [subjectInstanceId], references: [id])
}

model Enrolment {
  id                String   @id @default(cuid())
  userId           String   // Clerk userId
  subjectInstanceId String
  code             Int      // Enrolment code (matches enrolmentCode in SubjectInstance)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  subjectInstance  SubjectInstance @relation(fields: [subjectInstanceId], references: [id])

  // Add unique constraint to prevent duplicate enrolments
  @@unique([userId, subjectInstanceId])
}